from module.transaction import transaction
import csv
from openpyxl import load_workbook


#read transactions from default.xlsm as base for transactions array
def readInit():
    wb = load_workbook(filename="module/default.xlsm",keep_vba=True)
    sheet = wb.worksheets[0]
    #create transactions object with first row as column names
    transactions = [transaction(["Auftragskonto","Kategorie","Beguenstigter/Zahlungspflichtiger","Buchungsmonat","Verwendungszweck","Betrag"])]
    #get number of rows
    m_col = sheet.max_row
    for i in range(2,m_col+1):
        data = []
        for j in range(1,7):
            val = str(sheet.cell(i,j).value)
            if(val == "None"): val = ""
            data.append(val)
        transactions.append(transaction(data))
    return transactions
def writeExit(transactions):
    wb = load_workbook(filename="module/default.xlsm",keep_vba=True)
    sheet = wb.worksheets[0]
    transactionCounter = 1
    for tr in transactions:

        for i in range(1,7):
            sheet.cell(transactionCounter,i).value = tr.data[i-1]
        transactionCounter +=1
    wb.save("module/default.xlsm")
def resetDefault():
    wb = load_workbook(filename="module/default.xlsm", keep_vba=True)
    sheet = wb.worksheets[0]
    m_col = sheet.max_row
    for i in range(1, m_col + 1):
        for j in range(1, 7):
            sheet.cell(i, j).value = None
    wb.save("module/default.xlsm")


class CSVReader:
    def __init__(self,filename,transactions):
        if len(transactions) == 0: self.transactionsEmpty = True
        else : self.transactionsEmpty = False
        self.filename = filename
        self.transactions = transactions
        self.checkFile()
    def checkFile(self):
        with open(self.filename, "r", encoding='ISO-8859-1') as file:
            csvreader = csv.reader(file)
            words = str(list(csvreader)[0]).split(";")
            file.close()
        if len(words) == 6: self.reread()
        elif len(words) == 17: self.read()
        else : print(len(words))

    #
    #section Read
    #
    #read from the sparkassen file
    def read(self):
        with open(self.filename, "r", encoding='ISO-8859-1') as file:
            csvreader = csv.reader(file)
            for row in csvreader:
                if self.transactionsEmpty:
                    self.transactions.append(transaction(self.extractProperties(str(row))))
                else:
                    tr = transaction(self.extractProperties(str(row)))
                    contained = False
                    for tr2 in self.transactions:
                        if tr2.equals(tr):contained = True
                    if not contained: self.transactions.append(tr)

    def extractProperties(self, row):
        words = self.stringCutElements(row)
        account = words[0]
        if account == "Auftragskonto":
            categorie = "Kategorie"
        else:
            categorie = ""
        if words[11] == "":
            reciever = "Unknown"
        else:
            reciever = words[11]
        months = ["Januar","Februar","MÃ¤rz","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"]
        try:
            date = months[int(words[1][3:5])-1]
        except:
            date = "Buchungsmonat"
        use = words[4]
        amount = words[14]
        return [account, categorie, reciever, date, use, amount]

    # take the row and extract the words char by char
    # remove ",',[,]

    def stringCutElements(self, row):
        words = []
        word = ""
        if len(row) > 0:
            for i in range(0, len(row) - 1):
                char = row[i]
                if char == ";":
                    words.append(word)
                    word = ""
                elif char not in [" ", "\"", "\'", "[", "]"]:
                    word += char
            words.append(word)
        return words

    #
    #section ReRead
    #
    #reread a file generated by this programm
    def reread(self):
        with open(self.filename,"r",encoding="ISO-8859-1") as file:
            csvreader = csv.reader(file)
            for row in csvreader:
                if self.transactionsEmpty: self.transactions.append(transaction(self.rereadProperties( self.removeSigns(row))))
                else :
                    tr = transaction(self.rereadProperties(self.removeSigns(row)))
                    contained = False
                    for tr2 in self.transactions:
                        if tr2.equals(tr): contained = True
                    if not contained: self.transactions.append(tr)
        # remove " ' [ ]
    def removeSigns(self, s):
        sout = str(s).replace("\"", "").replace("\'", "").replace("[", "").replace("]", "").replace(" ", "")

        return sout
    def rereadProperties(self,row):
        words = row.split(";")
        account = words[0]
        if account == "Auftragskonto":
            categorie = "Kategorie:"
        else:
            categorie = words[1]
        if words[2] == "":
            reciever = "Unknown"
        else:
            reciever = words[2]
        date = words[3]
        use = words[4]
        amount = words[5]
        return [account, categorie, reciever, date, use, amount]
